#服务器的端口
server.port=8080

# 数据库访问配置
# 主数据源，默认的
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://localhost:3306/druid?serverTimezone=GMT%2b8&characterEncoding=utf-8 
spring.datasource.username=root
spring.datasource.password=root

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.tomcat.initial-size=5
spring.datasource.tomcat.max-idle=5
spring.datasource.tomcat.max-active=20
# 配置获取连接等待超时的时间
spring.datasource.tomcat.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.tomcat.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.tomcat.min-evictable-idle-time-millis=300000
spring.datasource.tomcat.validation-query=SELECT 1 FROM DUAL
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.test-on-borrow=false
spring.datasource.tomcat.test-on-return=false
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.tomcat.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#JPA配置
spring.jpa.open-in-view=false
# update： 每次启动项目的时候，jpa都会检测一次数据库，如果没有这张表，那么就会新建；如果有的话，则只是更新这张表，表内的数据不会变；
# create： 和update类似，只不过表内的原有数据会在启动的时候被清空；
# create-drop： 和create类似，只不过是每次项目关闭的时候清空数据；
# validate： 启动项目的时候会对数据库字段类型和数据进行校验，如果没有问题，正常启动，有问题的话，会报错
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jackson.serialization.indent-output=true
